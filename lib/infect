#!/usr/bin/env bash
set -eo pipefail

# Taken from nixos-infect
# More info at: https://github.com/elitak/nixos-infect

installNix() {
  # shellcheck disable=SC2174
  mkdir -p -m 0755 /nix

  # Add nix build users
  # FIXME run only if necessary, rather than defaulting true
  groupadd nixbld -g 30000 || true
  for i in {1..10}; do
    useradd -c "Nix build user $i" \
      -d /var/empty -g nixbld -G nixbld \
      -M -N -r -s "$(command -v nologin)" nixbld$i \
    || true
  done

  # TODO use addgroup and adduser as fallbacks
  #addgroup nixbld -g 30000 || true
  #for i in {1..10}; do adduser -DH -G nixbld nixbld$i || true; done

  curl https://nixos.org/nix/install | $SHELL
}

infect() {
  # Remove nix installed with curl | bash
  rm -fv /nix/var/nix/profiles/default*
  /nix/var/nix/profiles/system/sw/bin/nix-collect-garbage

  # Reify resolv.conf
  [[ -L /etc/resolv.conf ]] \
    && mv -v /etc/resolv.conf /etc/resolv.conf.lnk \
    && cat /etc/resolv.conf.lnk > /etc/resolv.conf

  # Stage the Nix coup d'Ã©tat
  touch /etc/NIXOS
  echo etc/nixos                   > /etc/NIXOS_LUSTRATE
  echo etc/resolv.conf            >> /etc/NIXOS_LUSTRATE
  echo root/.nix-defexpr/channels >> /etc/NIXOS_LUSTRATE

  rm -rf /boot.bak
  mv -v /boot /boot.bak

  /nix/var/nix/profiles/system/bin/switch-to-configuration boot
}

sourceNix() {
  [ -z "$NIX_PATH" ] || return 0
  [ -f ~/.nix-profile/etc/profile.d/nix.sh ] || installNix
  # shellcheck disable=SC1090
  source ~/.nix-profile/etc/profile.d/nix.sh
}

switch() {
  local name;       name="$1"
  local configPath; configPath="$2"

  sourceNix

  nix-env --set "$configPath" -p /nix/var/nix/profiles/system

  [ -f /etc/NIXOS ] || infect

  /nix/var/nix/profiles/system/bin/switch-to-configuration switch || {
    ecode="$?"
    if [ "$ecode" == 100 ]; then
      echo >&2 "Warning: Rebooting $name"
      nohup sh -c 'sleep 2;reboot' >/dev/null 2>&1 &
      exit 0
    else
      exit $ecode
    fi
  }
}

[ -z "$*" ] || "${1#_}" "${@:2}"
